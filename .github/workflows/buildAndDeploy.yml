name: 'Build and deploy to AKS'

# on:
#   push:
#     branches:
#       - main  # Set this to the branch you want to deploy from

on:
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: acrYevLab01
  PROJECT_NAME: YevDemo
  AKS_RESOURCE_GROUP: aksDemoEU01
  AKS_CLUSTER_NAME: aksYevLab01

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create a Buildx Instance
        run: docker buildx create --use --name mybuilder

      - name: Start Buildx
        run: docker buildx inspect --bootstrap

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/myapp:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Deploy to AKS
        run: |
          az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}
          kubectl set image deployment/myapp-deployment myapp=${{ secrets.ACR_LOGIN_SERVER }}/myapp:${{ github.sha }}
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
  
 
 
